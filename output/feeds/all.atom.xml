<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Trigger Happy</title><link href="https://blog.trigger-happy.eu/" rel="alternate"></link><link href="https://blog.trigger-happy.eu/feeds/all.atom.xml" rel="self"></link><id>https://blog.trigger-happy.eu/</id><updated>2017-11-15T22:00:00+01:00</updated><entry><title>Trigger Happy 1.5.1</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.5.1.html" rel="alternate"></link><published>2017-11-15T22:00:00+01:00</published><updated>2017-11-15T22:00:00+01:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2017-11-15:/django-trigger-happy-1.5.1.html</id><summary type="html">&lt;p&gt;Trigger Happy 1.5.1&lt;/p&gt;</summary><content type="html">&lt;p&gt;A very short release&lt;/p&gt;
&lt;h1&gt;The release covers minors fixes&lt;/h1&gt;
&lt;h2&gt;Code:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/commit/10e1569f8a1df84f02c0c7b9d49b05d918126677"&gt;10e1569&lt;/a&gt; - fix an issue with list of services not fully displayed for other user but just for the first one&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/commit/20884ac28ca8f4aad30494bbb05c2c6a596e39f6"&gt;20884ac&lt;/a&gt; - better w/ get_object_or_404 &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/commit/098fadb77517f12e18b60b78bca36cb218260915"&gt;098fadb&lt;/a&gt; - raise 404 when service not found &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/commit/e5ef9329b8718e59c658558887242c429f6b956d"&gt;e5ef932&lt;/a&gt; - login_required to avoid AnonymousUser error &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Doc:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/commit/6a143ada9f1ae139ade9aa8c87996f09bb0d9365"&gt;6a143ad&lt;/a&gt; - doc&lt;/li&gt;
&lt;/ul&gt;</content><category term="django"></category><category term="release"></category></entry><entry><title>Trigger Happy 1.5.0 "Hacktoberfest"</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.5.0-hacktoberfest.html" rel="alternate"></link><published>2017-10-27T16:00:00+02:00</published><updated>2017-10-27T16:00:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2017-10-27:/django-trigger-happy-1.5.0-hacktoberfest.html</id><summary type="html">&lt;p&gt;Trigger Happy 1.5.0 aka "Hacktoberfest" has been released !&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;This month, a wonderful event was launched, named &lt;a href="http://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Hacktoberfest allowed us to win T-Shirt once we did 4 accepted PR. The primary goal was not to win anything (really?:) but, contributing to an open source project, by picked up issues from github, tagged "hacktoberfest".&lt;/p&gt;
&lt;p&gt;This event was a great moment with a lot of exchanges with a lot of contributors, more than ever before in the story of the project.  &lt;/p&gt;
&lt;p&gt;As I already &lt;a href="https://blog.trigger-happy.eu/hacktoberfest-2017.html"&gt;explained&lt;/a&gt;, I did not expect anything from anyone, and opened a little bucket of issues, and surprisingly, contributions came as if it rained cat and dogs :)&lt;/p&gt;
&lt;p&gt;I deeply address a warm thanks for all of them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/koalie"&gt;Koalie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CrazyLlama"&gt;CrazyLlama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Logan1x"&gt;Logan1x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/h-chauhan"&gt;h-chauhan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RishabhJain2018"&gt;RishabhJain2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/denvaar"&gt;denvaar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alonisser"&gt;alonisser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Pal0r"&gt;Pal0r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scomert"&gt;scomert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pohzipohzi"&gt;pohzipohzi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2 specials thanks to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;h-chauhan who integrated the new Reddit module and fix several issues&lt;/li&gt;
&lt;li&gt;Koalie for all the doc reviewing  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the 'menu' :)&lt;/p&gt;
&lt;h1&gt;New feature :&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;New service &lt;a href="https://reddit.com"&gt;Reddit&lt;/a&gt; supported&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thus you can get data from a subreddit of your choice and push them wherever you want
You can also create a post in the subreddit you want, with the data coming from anywhere.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New service &lt;a href="https://joinmastodon.org/"&gt;Mastodon&lt;/a&gt; supported&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thus you can get data from a Mastodon instance, and push them on Twitter for example, or even in the over side, from Twitter to Mastodon
and with the images if the "toot"/"tweet" embeded one(s)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://joinmastodon.org/"&gt;&lt;img alt="Mastodon" src="https://blog.trigger-happy.eu/static/mastodon.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As usual, when you want to use such a service, you need to register an application.
In return, the service will then provides you the consumer key+secret you will put in the &lt;code&gt;.env&lt;/code&gt; file (see below)&lt;/p&gt;
&lt;h1&gt;Improvements:&lt;/h1&gt;
&lt;h2&gt;UI:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A rework of the page of the service management has been done and instead of having a form "all in one" for every service, that causes confusion, each service now has a form with just its required fields&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Settings:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You can now setup trigger-happy without editing &lt;code&gt;th_settings.py&lt;/code&gt; at all&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just create a &lt;code&gt;.env&lt;/code&gt; (by copying &lt;code&gt;env.sample&lt;/code&gt;) and set the value of the services you use.
In the documentation, for each &lt;a href="http://trigger-happy.readthedocs.io/en/latest/services.html"&gt;supported service&lt;/a&gt;, you can follow the steps to register an application, by reading "Registering a key" &lt;/p&gt;
&lt;h2&gt;Installation and administation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Installation now add fixtures to enable all the provided services&lt;/li&gt;
&lt;li&gt;The project now collects stats about the health of the triggers to avoid to impact the core by failing over and over again with weak triggers&lt;/li&gt;
&lt;li&gt;Administration : fix the edition of the services, fix the filters list on the service and triggers page.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Documentation:&lt;/h2&gt;
&lt;p&gt;I hope you will enjoy the doc as I spent a lot of time to detail how each of them can be activated, disabled, how to request key, how to use them as provider and consumer and so on. So now the doc is splitted in 4 guides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;installation guide&lt;/li&gt;
&lt;li&gt;an administration guide&lt;/li&gt;
&lt;li&gt;user guide&lt;/li&gt;
&lt;li&gt;docker guide&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Others:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Several little fixes here and there&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Installation and Update :&lt;/h1&gt;
&lt;h2&gt;for an new installation&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;django_th&lt;/span&gt; 
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;loaddata&lt;/span&gt; &lt;span class="n"&gt;initial_services&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;for an update do&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;django_th&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As there are 2 new services, you will need to enable the 2 new services &lt;a href="http://127.0.0.1:8000/admin/django_th/servicesactivated/"&gt;from the admin panel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Services" src="https://raw.githubusercontent.com/foxmask/django-th/master/docs/installation_guide/admin_service_list.png"&gt;
Console access: &lt;img alt="Services" src="http://127.0.0.1:8000/admin/django_th/servicesactivated/"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Adding a Service" src="https://raw.githubusercontent.com/foxmask/django-th/master/docs/installation_guide/admin_service_details.png"&gt;
Console access: &lt;img alt="Adding a service" src="http://127.0.0.1:8000/admin/django_th/servicesactivated/add/"&gt;&lt;/p&gt;</content><category term="django"></category><category term="release"></category><category term="mastodon"></category><category term="reddit"></category><category term="hacktoberfest"></category></entry><entry><title>Hacktoberfest 2017</title><link href="https://blog.trigger-happy.eu/hacktoberfest-2017.html" rel="alternate"></link><published>2017-10-13T20:00:00+02:00</published><updated>2017-10-13T20:00:00+02:00</updated><author><name>foxmask</name></author><id>tag:blog.trigger-happy.eu,2017-10-13:/hacktoberfest-2017.html</id><summary type="html">&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;I did not know anything about that event: the &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;
I found it somewhere, but I don't remember ;)&lt;/p&gt;
&lt;p&gt;But the idea attracted me.&lt;/p&gt;
&lt;p&gt;So I told to myself, that will be fun If I could catch a T-Shirt of that event by trying to offering my services for some …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;I did not know anything about that event: the &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;
I found it somewhere, but I don't remember ;)&lt;/p&gt;
&lt;p&gt;But the idea attracted me.&lt;/p&gt;
&lt;p&gt;So I told to myself, that will be fun If I could catch a T-Shirt of that event by trying to offering my services for some existing FOSS.&lt;/p&gt;
&lt;p&gt;And after some lookup on github, I didn't find something exciting. May be that was due to the fact that I started to make my search before october the 1rst.
So I thought I could use my own project and do my 4 PR on it.&lt;/p&gt;
&lt;p&gt;What a stupid idea...&lt;/p&gt;
&lt;h1&gt;The Issues&lt;/h1&gt;
&lt;p&gt;To start by the beginning, I had to think about little piece of tasks, like a todo list, of things I could do step by step, to easily reach the 4 PR. 
Once I raised my issues, tagged them with &lt;code&gt;hacktoberfest&lt;/code&gt;, &lt;code&gt;up-for-grab&lt;/code&gt;, &lt;code&gt;easy&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I was happy with the "menu" I had prepared myself for my month of october.&lt;/p&gt;
&lt;p&gt;That was on september the 28th.&lt;/p&gt;
&lt;p&gt;But suddenly, without expecting anything, one guy asked me to pick up one of the issues I opened.&lt;/p&gt;
&lt;p&gt;Okkkay, and I replied to him &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if you want to participate to the hacktoberfest, register and wait for october 1rst before submitting the PR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and I thought, ok it remains 4 issues, I can still get my t-shirt. &lt;/p&gt;
&lt;p&gt;But without believing in it, once again, surprrriiiiisee... Another guy asked me to pick up another issue.
I replied the same thing to this new 'october' contributor.&lt;/p&gt;
&lt;p&gt;I though "Okaaaaaaaayyy, it's a funny story..." but that was not finished ...&lt;/p&gt;
&lt;p&gt;2 others guys &lt;code&gt;stole&lt;/code&gt; my last issues.&lt;/p&gt;
&lt;p&gt;So I had to conclude "I won't win a t-shirt this year, but if 'october contributors' enjoy my issues, that could be the moment for them to discover the project, and finally, I will win as far as them, with that event"&lt;/p&gt;
&lt;p&gt;And later, I even had to arbitrate 2 PR for the same issues, to avoid a potential hacktoberwar :)&lt;/p&gt;
&lt;h1&gt;Hacktoberfest, enjoy !&lt;/h1&gt;
&lt;p&gt;Yes I know, you could think, "he get excited for nothing", may be because, you used to manage a lot of contributors with your own project, but not me.&lt;/p&gt;
&lt;p&gt;What is missing the most with project you make all alone, is discussing, exchanging ideas, discovering new lib and test them together. 
So you do everything like you want, when you want, but... alone. &lt;/p&gt;
&lt;p&gt;So Hacktoberfest is an event to enjoy coding, for sure, but also enjoying to share &amp;amp; show things of his project to others developpers and contributors.
Even if the "october contributors" won't stay active on the project after that event, that was a pleasant month (and it's not finished yet)&lt;/p&gt;
&lt;p&gt;Then I decided to create a milestone &lt;a href="https://github.com/foxmask/django-th/milestone/22"&gt;v1.5.0 aka 'Hacktoberfest 2017'&lt;/a&gt; with all the resolved issues to thank all the contributors for their help.&lt;/p&gt;
&lt;p&gt;After all of that: 10 issues were fixed by 9 contributors in 9days. More in one month, than in 4 years of existence of that project.&lt;/p&gt;
&lt;p&gt;Today, 48PR were merged, with 10 issues closed. Remains 4 opened.&lt;/p&gt;
&lt;h1&gt;What's new ?&lt;/h1&gt;
&lt;p&gt;The project now can be used with two new service : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/"&gt;Reddit&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://joinmastodon.org/"&gt;Mastodon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thus, you can exchange posts between Mastodon and Twitter in both direction.&lt;/p&gt;
&lt;p&gt;Have a look at those 2 posts : &lt;a href="https://mamot.fr/@foxmask/5223709"&gt;Mastodon&lt;/a&gt; / &lt;a href="https://twitter.com/foxxmask/status/916671218023100416"&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will give more details at the end of the month when the 1.5 will be released, with all the things that have been done by all the contributors.&lt;/p&gt;
&lt;p&gt;If you are curious, you can have a look at the &lt;a href="http://trigger-happy.readthedocs.org/"&gt;doc&lt;/a&gt; at least ;)&lt;/p&gt;
&lt;p&gt;It should also be said that a contributor installed the project for herself, without any knowledge in python/django, just her desire to install the project, sprinkle with a little bit of your servant's help. &lt;/p&gt;
&lt;p&gt;See you in two weeks and half :)&lt;/p&gt;</content><category term="TriggerHappy"></category><category term="Hacktoberfest"></category></entry><entry><title>Trigger Happy 1.4.0</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.4.0.html" rel="alternate"></link><published>2017-09-26T22:00:00+02:00</published><updated>2017-09-26T22:00:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2017-09-26:/django-trigger-happy-1.4.0.html</id><summary type="html">&lt;p&gt;Django Trigger Happy 1.4.0 released !&lt;/p&gt;</summary><content type="html">&lt;h1&gt;New feature :&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;New service Tumblr supported&lt;/li&gt;
&lt;li&gt;Data Digest that permits to get your grabbed data each, day, week, month if you want.
for that, just set digest_event to True &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DJANGO_TH = {
    # paginating
    &amp;#39;paginate_by&amp;#39;: 5,

    # this permits to avoid &amp;quot;flood&amp;quot; effect when publishing
    # to the target service - when limit is reached
    # the cache is kept until next time
    # set it to 0 to drop that limit
    &amp;#39;publishing_limit&amp;#39;: 0,
    # number of process to spawn from multiprocessing.Pool
    &amp;#39;processes&amp;#39;: 1,
    &amp;#39;services_wo_cache&amp;#39;: [&amp;#39;th_instapush&amp;#39;, ],
    # number of tries before disabling a trigger
    # when management commands run each 15min
    # with 4 &amp;#39;tries&amp;#39; this permit to try on 1 hour
    &amp;#39;failed_tries&amp;#39;: 2,  # can exceed 99 - when
    # if you want to authorize the fire button for EACH trigger
    &amp;#39;fire&amp;#39;: False,
    &amp;#39;digest_event&amp;#39;: True,
}
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Django and Python Update&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Django 1.11.x&lt;/li&gt;
&lt;li&gt;Python 3.6.x&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Improvements and bug fix&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;several little fixes here and there&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Installation and Update :&lt;/h1&gt;
&lt;p&gt;Once you did &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;django_th&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;finish by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to update the database&lt;/p&gt;
&lt;h1&gt;Notice&lt;/h1&gt;
&lt;p&gt;As this release do a step from django 1.8.x to 1.11.x, I strongly suggest to have a look at the doc and use &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;deploy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to see what's going on&lt;/p&gt;</content><category term="django"></category><category term="release"></category><category term="tumblr"></category></entry><entry><title>Django Trigger Happy 1.2.0</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.2.0.html" rel="alternate"></link><published>2016-12-22T16:00:00+01:00</published><updated>2016-12-22T16:00:00+01:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-12-22:/django-trigger-happy-1.2.0.html</id><summary type="html">&lt;p&gt;Django Trigger Happy 1.2.0 released !&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;edit&lt;/strong&gt; 29/12/2016 &lt;/p&gt;
&lt;p&gt;This will be a short, very short message, but with a lot of fun &lt;a href="https://foxmask.trigger-happy.eu/post/2016/11/26/trigger-happy-two-weeks-after-strong-storm/"&gt;I had (have a look at the 'bameda' in the bottom of the article)&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;New feature :&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/issues/155"&gt;#155&lt;/a&gt; &lt;a href="https://taiga.io/"&gt;Taiga&lt;/a&gt; and &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; services are now supported, through their respectives WebHooks... and &lt;a href="https://about.mattermost.com/"&gt;Mattermost&lt;/a&gt; too, as this project uses the same API of Slack. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/issues/162"&gt;#162&lt;/a&gt; You can now use the project with Docker. If you are familiar with docker, you can just follow &lt;a href="https://github.com/foxmask/django-th/blob/master/README_docker.md"&gt;the README_docker file&lt;/a&gt; I made.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Improvements :&lt;/h1&gt;
&lt;p&gt;Update of all the (old) requirements, except django still in 1.8.x&lt;/p&gt;
&lt;h2&gt;Contributions :&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;typo fixing &lt;a href="https://github.com/foxmask/django-th/pull/156"&gt;#156&lt;/a&gt; by Kenny John Jacob&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Installation and Update :&lt;/h1&gt;
&lt;p&gt;Once you did &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;django_th&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;finish by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to update the database&lt;/p&gt;
&lt;h1&gt;Docker (edit 29/12/2016) :&lt;/h1&gt;
&lt;p&gt;If you prefer to use docker, then clone the repository of the project&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/foxmask/django-th
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then&lt;/p&gt;
&lt;h2&gt;Build&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose build
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Run&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose up 
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Database update/create&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose run web  python manage.py migrate --settings=django_th.settings_docker
docker-compose run web  python manage.py createsuperuser --settings=django_th.settings_docker
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running tasks&lt;/h2&gt;
&lt;p&gt;2 tasks are usually in the crontab : one to read the data source, one to publish the grabbed data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-compose run web  python manage.py read --settings=django_th.settings_docker
docker-compose run web  python manage.py publish --settings=django_th.settings_docker
&lt;/pre&gt;&lt;/div&gt;</content><category term="django"></category><category term="release"></category><category term="docker"></category><category term="taiga"></category><category term="mattermost"></category><category term="slack"></category></entry><entry><title>Trigger Happy To Wallabag</title><link href="https://blog.trigger-happy.eu/trigger-happy-to-wallabag.html" rel="alternate"></link><published>2016-12-05T22:00:00+01:00</published><updated>2016-12-05T22:00:00+01:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-12-05:/trigger-happy-to-wallabag.html</id><summary type="html">&lt;p&gt;As you may already know, TriggerHappy is able to propagate data from any source of data to any service that consumes that data.&lt;/p&gt;
&lt;p&gt;Since several weeks now, I see a lot of tweets of people asking to the team of wallabag how to feed its wallabag instance,
and the team …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As you may already know, TriggerHappy is able to propagate data from any source of data to any service that consumes that data.&lt;/p&gt;
&lt;p&gt;Since several weeks now, I see a lot of tweets of people asking to the team of wallabag how to feed its wallabag instance,
and the team replying "we don't do that but external services exist to do the job like TriggerHappy".&lt;/p&gt;
&lt;p&gt;Last recent example (in French)&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="fr"&gt;&lt;p lang="fr" dir="ltr"&gt;&lt;a href="https://twitter.com/sylv_in"&gt;@sylv_in&lt;/a&gt; Bonjour. Aujourd&amp;#39;hui ça n&amp;#39;est pas possible avec IFTTT pour nous. Mais vous pouvez utiliser &lt;a href="https://t.co/x4VpdmBBkG"&gt;https://t.co/x4VpdmBBkG&lt;/a&gt; de &lt;a href="https://twitter.com/foxxmask"&gt;@foxxmask&lt;/a&gt;.&lt;/p&gt;&amp;mdash; wallabag (@wallabagapp) &lt;a href="https://twitter.com/wallabagapp/status/804286336471597056"&gt;1 décembre 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;On my side, I thought of a solution since a lot of time, making a dedicated version of TriggerHappy for Wallabag
Something very very very light.&lt;/p&gt;
&lt;p&gt;So this week-end during the night of saturday, I made &lt;a href="https://github.com/foxmask/th2w"&gt;TriggerHappy To Wallabag&lt;/a&gt; (th2w).
I used the same them of Wallabag, thus you will not be lost with the UI (at least I hope:)&lt;/p&gt;
&lt;p&gt;This project just does 2 things : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grabbing data from RSS/Atom Feeds&lt;/li&gt;
&lt;li&gt;Pushing the data to a Wallabag instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;As it's a python project, I'm sorry for PHP fan but if you don't enjoy that language, continue the path somewhere else :)
So, I will detail the way to install from scratch :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;creating a virtualenv&lt;/li&gt;
&lt;li&gt;cloning the source code&lt;/li&gt;
&lt;li&gt;settings the database&lt;/li&gt;
&lt;li&gt;starting the project&lt;/li&gt;
&lt;li&gt;Recursives jobs&lt;/li&gt;
&lt;li&gt;Creating a new trigger&lt;/li&gt;
&lt;li&gt;Running read and publish commands&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Creating a virtualenv&lt;/h1&gt;
&lt;p&gt;We will say we start from scratch from &lt;code&gt;/home/foxmask/&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;virtualenv --pytyhon&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python35 my_th2w
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Cloning the source code&lt;/h1&gt;
&lt;p&gt;get the sources from the github repository :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/foxmask/th2w.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then install the dependencies :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -r requirements.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Settings the database&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;           &lt;span class="c1"&gt;# this will create a Sqlite3 database&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;createsuperuser&lt;/span&gt;   &lt;span class="c1"&gt;# and reply to the questions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;for example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Username&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;leave&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;foxmask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
&lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;toto&lt;/span&gt;&lt;span class="nd"&gt;@tata.com&lt;/span&gt;
&lt;span class="n"&gt;Password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;Password&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;again&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; 
&lt;span class="n"&gt;Superuser&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Settings your Wallabag instance&lt;/h1&gt;
&lt;p&gt;in the &lt;code&gt;th2w/settings.py&lt;/code&gt; file, set the parameters that fit your needs :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WALLABAG_SECRET&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;client_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;client_secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# url without the final / eg http://foo.com not http://foo.com/&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check that the variable &lt;code&gt;DEBUG&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt; at the beginning of this file.&lt;/p&gt;
&lt;h1&gt;Starting the project&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;runserver&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you can open your browser and go to http://127.0.0.1:8000/ to start using the application&lt;/p&gt;
&lt;h1&gt;Recursives jobs&lt;/h1&gt;
&lt;p&gt;the 2 commands to execute, manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;or from the crontab:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;,25,41,55 * * * * . /home/foxmask/my_th2w/bin/activate &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /home/foxmask/my_th2w/th2w/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./manage.py &lt;span class="nb"&gt;read&lt;/span&gt; 
*/15 * * * * . /home/foxmask/my_th2w/bin/activate &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /home/foxmask/my_th2w/th2w/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./manage.py publish
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Creating a new trigger&lt;/h1&gt;
&lt;h2&gt;Connection&lt;/h2&gt;
&lt;p&gt;&lt;img alt="login" src="https://blog.trigger-happy.eu/static/th2w_login.png"&gt;&lt;/p&gt;
&lt;h2&gt;Create the trigger&lt;/h2&gt;
&lt;p&gt;Empty list&lt;/p&gt;
&lt;p&gt;&lt;img alt="empty list of triggers" src="https://blog.trigger-happy.eu/static/th2w_list.png"&gt;&lt;/p&gt;
&lt;p&gt;Creation&lt;/p&gt;
&lt;p&gt;&lt;img alt="Creation of a trigger" src="https://blog.trigger-happy.eu/static/th2w_create_trigger.png"&gt;&lt;/p&gt;
&lt;p&gt;List of triggers&lt;/p&gt;
&lt;p&gt;&lt;img alt="list of triggers" src="https://blog.trigger-happy.eu/static/th2w_list2.png"&gt;&lt;/p&gt;
&lt;h1&gt;Running read and publish commands&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;foxmask@localhost$ ./manage.py &lt;span class="nb"&gt;read&lt;/span&gt;
INFO foxmask - FoxMaSk Blog - &lt;span class="m"&gt;2&lt;/span&gt; new data
foxmask@localhost$ ./manage.py publish
INFO foxmask - FoxMaSk Blog - &lt;span class="m"&gt;2&lt;/span&gt; new data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Content before
&lt;img alt="list of triggers" src="https://blog.trigger-happy.eu/static/wallabag_instance_before.png"&gt;&lt;/p&gt;
&lt;p&gt;Content after
&lt;img alt="list of triggers" src="https://blog.trigger-happy.eu/static/wallabag_instance_after.png"&gt;&lt;/p&gt;
&lt;h1&gt;The final word&lt;/h1&gt;
&lt;p&gt;Now, if the complete project TriggerHappy was too much for your needs, just have fun with this one ;)&lt;/p&gt;</content><category term="wallabag"></category></entry><entry><title>Django Trigger Happy 1.1.0</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.1.0.html" rel="alternate"></link><published>2016-10-25T16:00:00+02:00</published><updated>2016-10-25T16:00:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-10-25:/django-trigger-happy-1.1.0.html</id><summary type="html">&lt;p&gt;Django Trigger Happy 1.1.0 is released ! Happy download !&lt;/p&gt;</summary><content type="html">&lt;p&gt;I enjoyed myself with 2 months of code atfer this summer. The result is that I played with Mock/Test that led to all the following details :&lt;/p&gt;
&lt;h1&gt;New feature :&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/foxmask/django-th/issues/77"&gt;#77&lt;/a&gt; launch one trigger from its list of triggers &lt;/p&gt;
&lt;h1&gt;Improvements :&lt;/h1&gt;
&lt;h2&gt;Core :&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;forget to add templates to Manifest for v 1.0.0&lt;/li&gt;
&lt;li&gt;Many improvement with Unitests &amp;amp; Mock&lt;/li&gt;
&lt;li&gt;drop unused modules : th_holidays th_search &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/issues/149"&gt;#149&lt;/a&gt; Triggers status of last execution&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/issues/145"&gt;#145&lt;/a&gt; Stop triggers that use a disabled service&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/foxmask/django-th/issues/143"&gt;#143&lt;/a&gt; avoid error 500 when submitted twice the creation of a service&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Modules :&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Evernote&lt;/strong&gt; : RateLimit is reached... does not return a evenote.api.client.Store &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Readability&lt;/strong&gt; : &lt;a href="https://github.com/foxmask/django-th/issues/147"&gt;#147&lt;/a&gt; Drop support&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Todoist&lt;/strong&gt; : regression with command line to 'recycle' data + an invalid import of TodoIst API&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; : get tweets from a given search string - the tag field works also perfecly for searching purpose&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; : set a longer size to store enorrrrmouuuusss token &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Twitter&lt;/strong&gt; : &lt;a href="https://github.com/foxmask/django-th/issues/146"&gt;#146&lt;/a&gt; do a tweet with one tag&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Contributions :&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;typo fixing &lt;a href="https://github.com/foxmask/django-th/pull/142"&gt;#142&lt;/a&gt; by Cyril Hou&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Installation and Update :&lt;/h1&gt;
&lt;p&gt;Once you did &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="n"&gt;django_th&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;finish by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;migrate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to update the database&lt;/p&gt;
&lt;h1&gt;Get involved :&lt;/h1&gt;
&lt;p&gt;Feel free to use the project for your own needs on your own hosting provider or test it on https://trigger-happy.eu&lt;/p&gt;
&lt;p&gt;If you want to see a new service to be included to the project: 2 solutions &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 you have python skill and you then can use : &lt;a href="https://github.com/foxmask/django-th-ansible"&gt;https://github.com/foxmask/django-th-ansible&lt;/a&gt; to create a new module or fork the project from &lt;a href="https://github.com/foxmask/django-th"&gt;https://github.com/foxmask/django-th&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2 you dont have python skill, the you can put suggestions about the project in comments .&lt;/li&gt;
&lt;li&gt;3 you have python skill and dont have time to participate, so go to point 2 ;) (ok it's a third solution:)&lt;/li&gt;
&lt;/ul&gt;</content><category term="django"></category><category term="release"></category></entry><entry><title>Trigger Happy : Setup Instapush service</title><link href="https://blog.trigger-happy.eu/trigger-happy-instapush.html" rel="alternate"></link><published>2016-09-09T21:00:00+02:00</published><updated>2016-09-09T21:00:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-09-09:/trigger-happy-instapush.html</id><summary type="html">&lt;p&gt;This article explain how to setup Instapush with Trigger Happy and then never miss a thing with a rain of notifications ;)&lt;/p&gt;</summary><content type="html">&lt;p&gt;To use Instapush on TriggerHappy :&lt;/p&gt;
&lt;h1&gt;3 steps&lt;/h1&gt;
&lt;h2&gt;Part 1 Instapush&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Dashboard" src="https://blog.trigger-happy.eu/static/Instapush_dashboard.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;on &lt;a href="http://instapush.im"&gt;instapush.im&lt;/a&gt; create an account &lt;/li&gt;
&lt;li&gt;from TriggerHappy.eu, &lt;a href="https://trigger-happy.eu/th/service/"&gt;edit your instapush service&lt;/a&gt; and in the "User token" field enter the "User token" you have from your dashboard on the tab "&amp;lt;/&amp;gt; Info"&lt;/li&gt;
&lt;li&gt;on &lt;a href="http://instapush.im"&gt;instapush.im&lt;/a&gt; dashboard, select the tabs "APPS" , then "+ Add Application" and enter a title for this app    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="The Apps" src="https://blog.trigger-happy.eu/static/Instapush_dashboard_apps.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;then on the page of your app select "+Add events" and fill the field like below for example &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="New event" src="https://blog.trigger-happy.eu/static/Instapush_dashboard_app_new_event.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;now with this new event, click on tab "Basic Info" and get the App ID and App Secret infos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Application details" src="https://blog.trigger-happy.eu/static/Instapush_dashboard_app_details.png"&gt;&lt;/p&gt;
&lt;h2&gt;Part 2 Trigger Happy&lt;/h2&gt;
&lt;p&gt;once all of that is done, create a trigger :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;select Twitter as Provider&lt;/li&gt;
&lt;li&gt;fill the field like you want, for example in screen put @foxxmask&lt;/li&gt;
&lt;li&gt;select instapush as Consumer&lt;/li&gt;
&lt;li&gt;fill the field with the App ID and App Secret you got earlier, fill the "event name" and "tracker name" you saw in the example earlier in the example "mestweets" and "message"&lt;/li&gt;
&lt;li&gt;save it&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Part 3 Instapush on your smartphone&lt;/h2&gt;
&lt;p&gt;Get it from the store, then connect your account.&lt;/p&gt;
&lt;h2&gt;End&lt;/h2&gt;
&lt;p&gt;and now ... wait my tweet :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="The tweets" src="https://blog.trigger-happy.eu/static/instapush_tweets.png"&gt;&lt;/p&gt;
&lt;p&gt;And tada&lt;/p&gt;
&lt;p&gt;&lt;img alt="Notifications" src="https://blog.trigger-happy.eu/static/Instapush_notif.png"&gt;&lt;/p&gt;
&lt;p&gt;no it's not Twitter notification but Instapush notification&lt;/p&gt;
&lt;p&gt;Have Fun !&lt;/p&gt;</content><category term="django"></category><category term="instapush"></category></entry><entry><title>Summer Registrations : how is it going</title><link href="https://blog.trigger-happy.eu/summer-registrations-how-is-it-going.html" rel="alternate"></link><published>2016-08-26T11:00:00+02:00</published><updated>2016-08-26T11:00:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-08-26:/summer-registrations-how-is-it-going.html</id><summary type="html">&lt;p&gt;This summer was suitable to many registrations of users on TriggerHappy website.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since the beginning of this summer, when the release 1.0 was published, many of you decided to try and see how the project behaved.&lt;/p&gt;
&lt;p&gt;One of the last services that was integrated and has your favor is Pushbullet.&lt;/p&gt;
&lt;p&gt;Unfortunatly for everyone, the access to the service is limited very quickly because the access to pushbullet is done from a "free account" which is limit to 500 access... by month, and so the Rate Limit is reached in a day or two ;)&lt;/p&gt;
&lt;p&gt;So to avoid to have the "free account" of TriggerHappy.eu banned for ever, the access of Pushbullet from TriggerHappy.eu is suspended.&lt;/p&gt;
&lt;p&gt;If you appreciate the project, I suggest you install it on your own server, and then you will have a fully access to Pubshbullet with your own "free account".&lt;/p&gt;
&lt;p&gt;If you need support for that, feel free to &lt;a href="https://trigger-happy.eu/contactus/"&gt;contact me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also when you use the website and encounter some errors (like the error 500), feel free to contact me too ;)&lt;/p&gt;
&lt;p&gt;Usually, the errors are quickly reported to me and fixed, so another try 1 or 2 days later should be fine.&lt;/p&gt;</content><category term="django"></category><category term="pushbullet"></category></entry><entry><title>Django Trigger Happy 1.0.0</title><link href="https://blog.trigger-happy.eu/django-trigger-happy-1.0.0.html" rel="alternate"></link><published>2016-07-03T18:15:00+02:00</published><updated>2016-07-03T18:15:00+02:00</updated><author><name>FoxMaSk</name></author><id>tag:blog.trigger-happy.eu,2016-07-03:/django-trigger-happy-1.0.0.html</id><summary type="html">&lt;p&gt;Django Trigger Happy 1.0.0 is released ! Happy download !&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since three years of incubating, time came to release the version 1&lt;/p&gt;
&lt;h1&gt;Whats new ?&lt;/h1&gt;
&lt;p&gt;Here are the new services supported that are now part of the keyring :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pushbullet&lt;/li&gt;
&lt;li&gt;Instapush&lt;/li&gt;
&lt;li&gt;Todoist&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The keyring now contains :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter&lt;/li&gt;
&lt;li&gt;Evernote&lt;/li&gt;
&lt;li&gt;Wallabag&lt;/li&gt;
&lt;li&gt;Pocket&lt;/li&gt;
&lt;li&gt;Readability&lt;/li&gt;
&lt;li&gt;Pushbullet&lt;/li&gt;
&lt;li&gt;Instapush&lt;/li&gt;
&lt;li&gt;Todoist&lt;/li&gt;
&lt;li&gt;Pelican&lt;/li&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;RSS&lt;/li&gt;
&lt;li&gt;Trello&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Improvements under the hood :&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Until today, all the services werent fully usable as they all consumed data but not provided them. For exemple you could create à note in Evernote to create an issue on github but could not get issue from github and create à note in Evernote. Now all the combinaison with those 11, 5 services is possible. The missing 0.5 is for Trello who is not able to provide filtered data yet but can receive everything.&lt;/li&gt;
&lt;li&gt;to be DRY : reducing a lot of code of each service and moving the auth to the main mother class.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Cosmestics :&lt;/h1&gt;
&lt;p&gt;the render of the list of triggers changed by dropping the blue of buttons to edit the services, which, with the time, tired  your eyes.&lt;/p&gt;
&lt;p&gt;I also added the icons of each known service by the set of picture from &lt;a href="http://fontawesome.io"&gt;http://fontawesome.io&lt;/a&gt; , in that buttons.&lt;/p&gt;
&lt;h1&gt;Tests of services :&lt;/h1&gt;
&lt;p&gt;In the meantime i tried a lot of services, but :
&lt;em&gt; some do not have api -&amp;gt; Google Keep
&lt;/em&gt; make you pay to use their service -&amp;gt; pushOver, diigo. As a fresoftware developper, ethically, i could not resign myself to support services that you have to pay to use them. A special case  : todoist, but here, the service provides enough "Free" parts that we can use which justifies its support.
* some are too slow with the browser and do not support postgresql -&amp;gt; paperwork&lt;/p&gt;
&lt;p&gt;As a fishman, i fished a lot but didnt find a lot of nice fish. But that permits to learn new ways to fish and improve my fishing rod.&lt;/p&gt;
&lt;h1&gt;What next ?&lt;/h1&gt;
&lt;h2&gt;Version 1 :&lt;/h2&gt;
&lt;p&gt;Fixes and new services could be added, like yours and mine :)&lt;/p&gt;
&lt;h2&gt;Version 2 :&lt;/h2&gt;
&lt;p&gt;This version could change the face of the project, with, for instance, Angularjs as front with DRF on top of Trigger-happy to deliver the API access, plus many async* stuff in background. Right now nothing is written in the marble and is still widly open for suggestions you could make.&lt;/p&gt;
&lt;p&gt;So stay tune, and have fun !&lt;/p&gt;
&lt;h1&gt;Last thing :&lt;/h1&gt;
&lt;p&gt;Now, you can 'come in' the service ! How ? On &lt;a href="https://trigger-happy.eu"&gt;Trigger Happy&lt;/a&gt;, click on "come in" in the top of the page and enjoy.&lt;/p&gt;</content><category term="django"></category><category term="release"></category><category term="pushbullet"></category><category term="todoist"></category><category term="instapush"></category></entry></feed>