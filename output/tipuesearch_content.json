{"pages":[{"title":"Contact","text":"You want to contact us ? Mail us at service @ trigger-happy dot eu, and it will be a pleasure to answer you.","tags":"pages","url":"pages/contact"},{"title":"Developpers","text":"a Technical Presentation Trigger Happy How to get involved ? the source code of the project is available on a GitHub repository , where you could fork it, make your improvments, create new services (with django module) like Twitter, FourSquare, Reddit etc... to expand the project If you find some issues linked to the application, do not hesitate open a ticket and provide the maximum of details Existing Modules the following services could be helpful to start your own module Evernote GitHub Instapush Mattermost (same as Slack) Pushbullet Pocket RSS Taiga Slack Todoist Trello Tumblr Twitter Wallabag Roadmap You can follow it from here","tags":"pages","url":"pages/developpers"},{"title":"Introduction","text":"As it exists tools to make his blog or website or even his own cloud system, \"Trigger Happy\" is a tool that permits to take the control of your data with this opensource clone of IFTTT, a bridge, a bus, a shuttle between your internet services For more details I invite you to have a look at the information page","tags":"pages","url":"pages/introduction"},{"title":"Informations","text":"What is this ? \"Trigger Happy\" is the ðŸšŒ for your internet services How does it work ? Trigger Happy enters in a new category of tools which permits to manage the connection between internet services, as a bridge between them, and will act from events triggered: on the web on your own \"internet\" accounts Examples : When a news is published on a website, I want it to be stored in my Evernote or Pocket account to be read later, or published it on Twitter, or on my Facebook wall, etc... when I add a note to my Evernote account, I want to send it to my Pocket account also When a tweet about a specific subject is published, send it to my Pocket/Evernote/Whatever account etcâ€¦ All of this is widely inspired by the very great IFTTT service which permits that exchanges. What services are available ? Evernote , Instapush , GitHub , Mastodoon , Mattermost, Pelican , Pocket , PushBullet , Reddit , RSS , Slack , Taiga , Todoist , Trello , Tumblr Twitter , Wallabag , Installing his/her own Trigger Happy instance I invite you to read the documentation which details all you need. And if by some misfortune, you don't really know how to install it, come on gitter to reach me (foxmask) and we could talk about that. I could already help someone to install the project, without any knowledge with python/django Using Trigger Happy without installing it Just login in to the Trigger Happy website. It may happens that some features won't be available. This, to avoid the server to stop working correctly. How is this service born ? Following setbacks with a service called IFTTT which made unreadable notes (because it did not handle accented characters UTF-8), the decision was made to launch a free alternative. a Technical Presentation Trigger Happy","tags":"pages","url":"pages/informations"},{"title":"Trigger Happy 1.5.0 \"Hacktoberfest\"","text":"Introduction: This month, a wonderful event was launched, named Hacktoberfest . This Hacktoberfest allowed us to win T-Shirt once we did 4 accepted PR. The primary goal was not to win anything (really?:) but, contributing to an open source project, by picked up issues from github, tagged \"hacktoberfest\". This event was a great moment with a lot of exchanges with a lot of contributors, more than ever before in the story of the project. As I already explained , I did not expect anything from anyone, and opened a little bucket of issues, and surprisingly, contributions came as if it rained cat and dogs :) I deeply address a warm thanks for all of them. Koalie CrazyLlama Logan1x h-chauhan RishabhJain2018 denvaar alonisser Pal0r scomert pohzipohzi 2 specials thanks to: h-chauhan who integrated the new Reddit module and fix several issues Koalie for all the doc reviewing Now the 'menu' :) New feature : New service Reddit supported Thus you can get data from a subreddit of your choice and push them wherever you want You can also create a post in the subreddit you want, with the data coming from anywhere. New service Mastodon supported Thus you can get data from a Mastodon instance, and push them on Twitter for example, or even in the over side, from Twitter to Mastodon and with the images if the \"toot\"/\"tweet\" embeded one(s) As usual, when you want to use such a service, you need to register an application. In return, the service will then provides you the consumer key+secret you will put in the .env file (see below) Improvements: UI: A rework of the page of the service management has been done and instead of having a form \"all in one\" for every service, that causes confusion, each service now has a form with just its required fields Settings: You can now setup trigger-happy without editing th_settings.py at all Just create a .env (by copying env.sample ) and set the value of the services you use. In the documentation, for each supported service , you can follow the steps to register an application, by reading \"Registering a key\" Installation and administation Installation now add fixtures to enable all the provided services The project now collects stats about the health of the triggers to avoid to impact the core by failing over and over again with weak triggers Administration : fix the edition of the services, fix the filters list on the service and triggers page. Documentation: I hope you will enjoy the doc as I spent a lot of time to detail how each of them can be activated, disabled, how to request key, how to use them as provider and consumer and so on. So now the doc is splitted in 4 guides: installation guide an administration guide user guide docker guide Others: Several little fixes here and there Installation and Update : for an new installation pip install django_th python manage . py loaddata initial_services python manage . py migrate for an update do pip install - U django_th python manage . py migrate As there are 2 new services, you will need to enable the 2 new services from the admin panel Console access: Console access:","tags":"News","url":"django-trigger-happy-1.5.0-hacktoberfest.html"},{"title":"Hacktoberfest 2017","text":"Intro I did not know anything about that event: the Hacktoberfest I found it somewhere, but I don't remember ;) But the idea attracted me. So I told to myself, that will be fun If I could catch a T-Shirt of that event by trying to offering my services for some existing FOSS. And after some lookup on github, I didn't find something exciting. May be that was due to the fact that I started to make my search before october the 1rst. So I thought I could use my own project and do my 4 PR on it. What a stupid idea... The Issues To start by the beginning, I had to think about little piece of tasks, like a todo list, of things I could do step by step, to easily reach the 4 PR. Once I raised my issues, tagged them with hacktoberfest , up-for-grab , easy . I was happy with the \"menu\" I had prepared myself for my month of october. That was on september the 28th. But suddenly, without expecting anything, one guy asked me to pick up one of the issues I opened. Okkkay, and I replied to him if you want to participate to the hacktoberfest, register and wait for october 1rst before submitting the PR. and I thought, ok it remains 4 issues, I can still get my t-shirt. But without believing in it, once again, surprrriiiiisee... Another guy asked me to pick up another issue. I replied the same thing to this new 'october' contributor. I though \"Okaaaaaaaayyy, it's a funny story...\" but that was not finished ... 2 others guys stole my last issues. So I had to conclude \"I won't win a t-shirt this year, but if 'october contributors' enjoy my issues, that could be the moment for them to discover the project, and finally, I will win as far as them, with that event\" And later, I even had to arbitrate 2 PR for the same issues, to avoid a potential hacktoberwar :) Hacktoberfest, enjoy ! Yes I know, you could think, \"he get excited for nothing\", may be because, you used to manage a lot of contributors with your own project, but not me. What is missing the most with project you make all alone, is discussing, exchanging ideas, discovering new lib and test them together. So you do everything like you want, when you want, but... alone. So Hacktoberfest is an event to enjoy coding, for sure, but also enjoying to share & show things of his project to others developpers and contributors. Even if the \"october contributors\" won't stay active on the project after that event, that was a pleasant month (and it's not finished yet) Then I decided to create a milestone v1.5.0 aka 'Hacktoberfest 2017' with all the resolved issues to thank all the contributors for their help. After all of that: 10 issues were fixed by 9 contributors in 9days. More in one month, than in 4 years of existence of that project. Today, 48PR were merged, with 10 issues closed. Remains 4 opened. What's new ? The project now can be used with two new service : Reddit Mastodon Thus, you can exchange posts between Mastodon and Twitter in both direction. Have a look at those 2 posts : Mastodon / Twitter I will give more details at the end of the month when the 1.5 will be released, with all the things that have been done by all the contributors. If you are curious, you can have a look at the doc at least ;) It should also be said that a contributor installed the project for herself, without any knowledge in python/django, just her desire to install the project, sprinkle with a little bit of your servant's help. See you in two weeks and half :)","tags":"Techno","url":"hacktoberfest-2017.html"},{"title":"Awesome Selfhosted","text":"Today, the project is now part of the \"awesome\" list of selfhosted projects that you can find here You will notice that Trigger Happy is all alone in that category with the python language","tags":"News","url":"awesome-selfhosted.html"},{"title":"Shoot an Arrow with Ansible in the TriggerHappy target","text":"Create a module for participating to TriggerHappy is now so simple that I cant imagine to make a new one without this new little module named \"Trigger Happy Ansible\" What does it do ? Well, as anyone can imagine, when you start a django project you enter, python manage.py startproject when you start a new app you enter : python manage.py startapp thus you will have a new empty module with a lot a \"empty\" files. To speed up the creation of a Trigger Happy module, first I made a simple module django-th-dummy that provides a module ready to use , but that need to be customized to be used. So I went a little far away and now you can just enter ansible-playbook -i hosts site.yml and that's all ! a new TriggerHappy module is ready to be installed in the middle of all the others ones. Under the hood, what has been done ? You need to install ansible, then setup the site.yml file to change all the variables that fit your needs and once the playbook is played, a new folder will be created with everything needed by TriggerHappy Here is the site.yml file. The lines to be changed are those ones : vars : # to directory tree and class/module/name purpose module_name : johndoe service_name : johndoe class_name : Johndoe # for setup.py purpose author : John Doe author_email : john@doe.com description : this is a module that is fun details : when fun is higher than anything url : https://github.com/foxmask/django-th-johndoe download_url : https://github.com/foxmask/django-th-johndoe/archive/trigger-happy-johndoe- # for dependencies purpose external_api : foobar external_api_class : Foobar external_api_version : 1.2.3 as you can see, I separated variables by usage domain And here is the output of the running ansible playbook ansible-playbook -i hosts site.yml PLAY [ home-sweet-home ] ******************************************************** GATHERING FACTS *************************************************************** ok: [ localhost ] TASK: [ dummy | create folder of the module name ] ****************************** changed: [ localhost ] TASK: [ dummy | create tests folder of the module name ] ************************ changed: [ localhost ] TASK: [ dummy | travis.yml ] **************************************************** changed: [ localhost ] TASK: [ dummy | gitignore ] ***************************************************** changed: [ localhost ] TASK: [ dummy | copy of th_dummy/__init__.py ] ********************************** changed: [ localhost ] TASK: [ dummy | copy of th_dummy/tests/__init__.py ] **************************** changed: [ localhost ] TASK: [ dummy | copy of LICENSE ] *********************************************** changed: [ localhost ] TASK: [ dummy | copy of MANIFEST.in ] ******************************************* changed: [ localhost ] TASK: [ dummy | copy of setup.py ] ********************************************** changed: [ localhost ] TASK: [ dummy | copy of README.rst ] ******************************************** changed: [ localhost ] TASK: [ dummy | copy of requirements.txt ] ************************************** changed: [ localhost ] TASK: [ dummy | copy of my_dummy.py to my_ {{ module_name }} .py ] *************** changed: [ localhost ] TASK: [ dummy | copy of model.py ] ********************************************** changed: [ localhost ] TASK: [ dummy | copy of forms.py ] ********************************************** changed: [ localhost ] TASK: [ dummy | copy of test.py ] *********************************************** changed: [ localhost ] TASK: [ dummy | copy of the templates ] ***************************************** changed: [ localhost ] PLAY RECAP ******************************************************************** localhost : ok = 17 changed = 16 unreachable = 0 failed = 0 ( triggerhappy-bootstrap ) foxmask@zorro:~/Django-VirtualEnv/django-th-ansible$ ls -ltR django-th-johndoe/ django-th-johndoe/: total 24 drwxr-xr-x 4 foxmask foxmask 4096 aoÃ»t 23 16 :28 th_johndoe -rw-r--r-- 1 foxmask foxmask 14 aoÃ»t 23 16 :28 requirements.txt -rw-r--r-- 1 foxmask foxmask 1368 aoÃ»t 23 16 :28 README.rst -rw-r--r-- 1 foxmask foxmask 1186 aoÃ»t 23 16 :28 setup.py -rw-r--r-- 1 foxmask foxmask 194 aoÃ»t 23 16 :28 MANIFEST.in -rw-r--r-- 1 foxmask foxmask 1484 aoÃ»t 23 16 :28 LICENSE django-th-johndoe/th_johndoe: total 28 drwxr-xr-x 2 foxmask foxmask 4096 aoÃ»t 23 16 :28 tests -rw-r--r-- 1 foxmask foxmask 471 aoÃ»t 23 16 :28 forms.py -rw-r--r-- 1 foxmask foxmask 614 aoÃ»t 23 16 :28 models.py -rw-r--r-- 1 foxmask foxmask 6424 aoÃ»t 23 16 :28 my_johndoe.py -rw-r--r-- 1 foxmask foxmask 81 aoÃ»t 23 16 :28 __init__.py drwxr-xr-x 3 foxmask foxmask 4096 aoÃ»t 23 16 :28 templates django-th-johndoe/th_johndoe/tests: total 4 -rw-r--r-- 1 foxmask foxmask 3725 aoÃ»t 23 16 :28 test.py -rw-r--r-- 1 foxmask foxmask 0 aoÃ»t 23 16 :28 __init__.py django-th-johndoe/th_johndoe/templates: total 4 drwxr-xr-x 2 foxmask foxmask 4096 aoÃ»t 23 16 :28 th_johndoe django-th-johndoe/th_johndoe/templates/th_johndoe: total 20 -rw-r--r-- 1 foxmask foxmask 1277 aoÃ»t 23 16 :28 edit_provider.html -rw-r--r-- 1 foxmask foxmask 1277 aoÃ»t 23 16 :28 edit_consumer.html -rw-r--r-- 1 foxmask foxmask 1513 aoÃ»t 23 16 :28 wz-3-form.html -rw-r--r-- 1 foxmask foxmask 1513 aoÃ»t 23 16 :28 wz-1-form.html -rw-r--r-- 1 foxmask foxmask 382 aoÃ»t 23 16 :28 callback.html","tags":"News","url":"shoot-an-arrow-with-ansible-in-the-triggerhappy-target.html"},{"title":"Alternatives and New Services","text":"Alternativeto.net You can now find alternatives of Trigger Happy on alternative to and see with which others projects it can be compared. There is lot of interesting project ;-) New services New services are supported with Trigger Happy : GitHub and Trello \"Organize anything, together.\" A scenario we can now make is to create an issue on a github project, once a card is created in a board of Trello Contact and future If you already know the project LibreBoard, an opensource clone of Trello, which is became Wekan, it is planed to make a REST API to be able to be used like Trello. So TriggerHappy will be ready as soon as they will finished this API.","tags":"News","url":"alternative-to.html"},{"title":"Bar is opened","text":"Hi, the idea was in my head for a while, and finished to make its path and now I found the time to start this blog. Here I will publish the news about the project, the roadmap, the news modules, the release and so on. All that makes a project living. Stay tune ;)","tags":"News","url":"bar-is-opened.html"},{"title":"Django Trigger Happy 0.11.0","text":"Hi, Here is an English Version of my post I made Yesterday, that I couldnt forget to publish ;) So, Here comes a small update of my little project, micro ESB, allowing to orchestrate data retrieval and publishing, while exploiting your own Internet services (like Twitter to name one). Just to stay the master and crontrol your data without having to give your access permissions to anyone. In celebration program : New Functions Its now possible to produce RSS flux from the data, retrieved by another service we will installed. .. image:: http://www.foxmask.bzh/wp-content/uploads/2015/08/service_installe.png :alt: Installed Services For example from the Twitter service. Typically we do a trigger for publishing on twitter, anything that comes from a site such as the week in chess, follow the news. Now you can do the opposite. Follow hashtag #chess, for example, and all that will be published on this subject, will eventually be generated in an RSS feed by TriggerHappy. I extend a hello to lonely friends of yahoo pipes to whom I did that, with a foot call from sam&max ;-) New service Integration : Trello . \"is the free, flexible, and visual way to organize anything with anyone.\" as it defines itself. You can then add card of things to do to organize your project. This adds a toy to the list of keys ring : Twitter, Evernote, RSS, Readability, Pocket Search engine (based on haystack & elasticsearch).It is not luxury when you ended up having a lot of triggers, existential questions arise \"well I had yet created a trigger that spoke of recipes Breton cuisine\" ;-) A function \" holidays \" which disables all the triggers, to enjoy his vacation for good ! Then, when you will come back from holidays, you disable the holidays mode which will reactivate the triggers that were enable before. Technical improvements No more Python2 anywhere. This force me to find solutions of other lib oauth2 authentication for the services like readability and Evernote. Blessing in disguise ! requests oauthlib is the solution like anyone can imagine :-) Django 1.8.x (naturally) Reorganisation of services modules in one application rather than having a repository for each module, I ended up all together in filing trigger-happy. Currently it's convenient for releasing and for unit testing, but my gut tells me that at one time I bite into fingers. Managing a limit on the number of publications to a service. Example : I publish on Twitter more than 30 websites that I follow. At a given moment, the news of each of them come too much, that I publish too quickly on Twitter, this has the side effect, to \"flood\" the timeline of my friends and followers, who, instead of having a heterogeneous timeline ending by hate me to plublish quicker than que Lucky Luke. Now, \"this\" is over. We define a limit and when it's reached, we publish the rest later. Performances As I'm never satisfied of what I produce, even when I finish a thing I tell myself I can do even better. From this perspective, therefore, I articulated the code based on the \" framework cache \" of django which permits to use the backend of your choice. Thus, all retrieving of data of all the service, is put in the cache. Then, at the publishing moment, Trigger Happy will pick the data in the cache. Before that, all was synchrone. Now Celery orchestrates this retrieving of data and their publishing Documentation Updated everywhere. Do not hesitate a moment to read it To upgrade from the previous release everything is here, a migration that took me time to finalize And tommorow ? some new service are planned, and some other ideas :) I also took the opportunity to rearrange tickets/labels/milestones on github, an easy way to find what one seeks to facilitate contributions Thanks ! Thank to some interested , to some curious and finally to contributors who try to tiptoe ;)","tags":"News","url":"django-trigger-happy-0.11.0.html"}]}